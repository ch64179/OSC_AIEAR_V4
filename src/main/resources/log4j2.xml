<?xml version="1.0" encoding="UTF-8"?>
<Configuration name="defaultLoggingConfig">
	<properties>
		<property name="fileName">statAgent</property>
		<property name="pattern">[%-6p] [%d{yyyy-MM-dd HH:mm:ss}][%15.15t] %C{1}.%M(%F:%L) - %m%n</property>
	</properties>

	<Appenders>
		<Console name="Console" target="SYSTEM_OUT">
			<patternLayout pattern="${pattern}" />
		</Console>
		
		<!-- Query Loggers 쿼리 과정(파라미터까지) -->
        <appender name="console-dblog" class="org.apache.log4j.ConsoleAppender"> 
	         <PatternLayout pattern="%d %5p %m%n" />
        </appender>
        
<!-- 		<RollingFile name="file" fileName="C:/dev/log/${fileName}.log" filePattern="C:/dev/log/${fileName}.%d{yyyy-MM-dd}.log"> -->
		<RollingFile name="file" fileName="/log/${fileName}.log" filePattern="/log/${fileName}.%i.%d{yyyy-MM-dd}.log">
			<PatternLayout pattern="${pattern}" />
			<Policies>
				<TimeBasedTriggeringPolicy interval="6" modulate="true"/>
            	<SizeBasedTriggeringPolicy size="10 MB"/>
			</Policies>
			<DefaultRolloverStrategy max="20"/>
		</RollingFile>
	</Appenders>

	<Loggers>
        
		<Logger name="com.aiear" level="debug" additivity="false"> 
            <AppenderRef ref="Console" />
            <AppenderRef ref="file" /> 
        </Logger>
		<Logger name="com.aiear.custom" level="info" additivity="false"> 
            <AppenderRef ref="Console" />
        </Logger>
        
        <Logger name="org.wso2.siddhi" level="info" additivity="false"> 
            <AppenderRef ref="Console" />
            <AppenderRef ref="file" /> 
        </Logger>

		<Logger name="org.mybatis" level="ERROR" additivity="false"> 
            <AppenderRef ref="Console" />
            <AppenderRef ref="file" /> 
        </Logger>


<!-- 
 - jdbc.sqlonly : SQL문만을 로그로 남기며, PreparedStatement일 경우 관련된 argument 값으로 대체된 SQL문이 보여진다. 
 - jdbc.sqltiming : SQL문과 해당 SQL을 실행시키는데 수행된 시간 정보(milliseconds)를 포함한다. 
 - jdbc.audit : ResultSet을 제외한 모든 JDBC 호출 정보를 로그로 남긴다. 많은 양의 로그가 생성되므로 특별히 JDBC 문제를 추적해야 할 필요가 있는 경우를 제외하고는 사용을 권장하지 않는다. 
 - jdbc.resultset : ResultSet을 포함한 모든 JDBC 호출 정보를 로그로 남기므로 매우 방대한 양의 로그가 생성된다. 
 - jdbc.resultsettable : SQL 결과 조회된 데이터의 table을 로그로 남긴다.
 -->
		<Logger name="jdbc" level="debug" additivity="false"> 
        </Logger>

		<Logger name="jdbc.sqlonly" level="debug" additivity="false"> 
            <AppenderRef ref="Console" />
        </Logger>

		<Logger name="jdbc.resultsettable" level="debug" additivity="false"> 
            <AppenderRef ref="Console" />
        </Logger>
        
		<Logger name="jdbc.sqltiming" level="ERROR" additivity="false"> 
            <AppenderRef ref="Console" />
             <AppenderRef ref="file" />
        </Logger>



		<Root level="info">
			<AppenderRef ref="Console" />
			<AppenderRef ref="file" />
		</Root>
	</Loggers>
	
</Configuration>