<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace 명은 dao 와 일치하게 작성하면 됨 -->
<mapper namespace="com.aiear.dao.HospitalMngDAO">

	<!-- 병원 정보 리스트 조회 -->
	<select id="getHospitalList" parameterType="hospitalInfoVO" resultType="hmap">
		SELECT t1.hospital_nm
			 , t1.hospital_id
			 , t1.hospital_pwd
			 , t1.hospital_type
			 , t1.hospital_tel_no
			 , t1.mgr_tel_no
			 , t1.hospital_addr
			 , t1.hospital_img
			 , t1.hospital_desc
			 , t1.pwd_mdfy_dt
			 , t1.use_yn
			 , t2.cd_val AS use_yn_nm
			 , t1.gen_by
			 , t1.gen_dt
			 , t1.mdfy_by
			 , t1.mdfy_dt
			 , t1.new_yn
			 , t3.cd_val AS new_yn_nm
			 , t1.user_type
			 , CASE WHEN t4.use_flag IS NULL THEN 'W'
			 		ELSE t4.use_flag
			 		END AS use_flag
			 , CASE WHEN t4.use_flag IS NULL THEN '대기'
			 		ELSE t5.cd_val
			 		END AS use_flag_nm
		  FROM t_hospital_info t1
	INNER JOIN t_cm_cd t2
			ON t1.use_yn = t2.cd
		   AND t2.cat_cd = 'HOSPITAL_USE_YN'
	INNER JOIN t_cm_cd t3
			ON t1.new_yn = t3.cd
		   AND t3.cat_cd = 'HOSPITAL_NEW_YN'
	LEFT OUTER JOIN (SELECT a1.hospital_id
			 , CASE WHEN MAX(a1.use_flag2)::integer = 1 THEN 'Y'
			 		ELSE 'N'
			 		END AS use_flag
		  FROM (SELECT hospital_id
					 , CASE WHEN now() BETWEEN start_dt AND end_dt THEN '1'
					 		ELSE '0'
					 		END AS use_flag2
				  FROM t_inicis_user_mapp
				 GROUP BY hospital_id
				 		, use_flag2) a1
		 GROUP BY a1.hospital_id) t4
			ON t1.hospital_id = t4.hospital_id
	LEFT OUTER JOIN t_cm_cd t5
			ON t4.use_flag = t5.cd
		   AND t5.cat_cd = 'HOSPITAL_REC_YN'
		 WHERE 1=1
		<if test='hospital_nm != null and !"".equals(hospital_nm)'>
		   AND (t1.hospital_nm ILIKE CONCAT('%', #{hospital_nm}, '%')
		    OR t1.hospital_id ILIKE CONCAT('%', #{hospital_nm}, '%'))
		</if>
		<choose>
			<when test='order_type != null and !"".equals(order_type) and order_type2 != null and !"".equals(order_type2)'>
		 ORDER BY t1.${order_type} ${order_type2}
			</when>
			<otherwise>
		 ORDER BY t1.GEN_DT DESC
			</otherwise>
		</choose>
		<if test='raw_cnt != null and !"".equals(raw_cnt) and page_cnt != null and !"".equals(page_cnt)'>
		 LIMIT ${raw_cnt}
		OFFSET (${page_cnt} - 1) * ${raw_cnt};
		</if>
	</select>
	
	
	<!-- 병원 정보 상세 조회 -->
	<select id="getHospitalDetail" parameterType="hospitalInfoVO" resultType="hmap">
		SELECT t1.hospital_nm
			 , t1.hospital_id
			 , t1.hospital_pwd
			 , t1.hospital_type
			 , t1.hospital_tel_no
			 , t1.mgr_tel_no
			 , t1.hospital_addr
			 , t1.hospital_img
			 , t1.hospital_desc
			 , t1.pwd_mdfy_dt
			 , t1.use_yn
			 , t2.cd_val AS use_yn_nm
			 , t1.gen_by
			 , t1.gen_dt
			 , t1.mdfy_by
			 , t1.mdfy_dt
			 , t1.new_yn
			 , t3.cd_val AS new_yn_nm
			 , t1.user_type
		  FROM t_hospital_info t1
	INNER JOIN t_cm_cd t2
			ON t1.use_yn = t2.cd
		   AND t2.cat_cd = 'HOSPITAL_USE_YN'
	INNER JOIN t_cm_cd t3
			ON t1.new_yn = t3.cd
		   AND t3.cat_cd = 'HOSPITAL_NEW_YN'
		 WHERE 1=1
		   AND t1.hospital_id = #{hospital_id}
	</select>
	
	
	<!-- 병원 ID 중복 체크 -->
	<select id="getHospitalDupChk" parameterType="hospitalInfoVO" resultType="int">
		SELECT COUNT(*)
		  FROM t_hospital_info
		 WHERE hospital_id = #{hospital_id}
	</select>
	
	
	<!-- 병원 정보 적재 -->
	<insert id="insertHospitalInfo" parameterType="hospitalInfoVO">
		INSERT INTO t_hospital_info (
			hospital_nm,
			hospital_id,
			hospital_pwd,
			use_yn,
			gen_by,
			gen_dt,
			new_yn,
			user_salt
		) VALUES (
			#{hospital_nm},
			#{hospital_id},
			#{hospital_pwd},
			'Y'::bpchar,
			'admin',
			now(),
			'Y'::bpchar,
			#{user_salt}
		)
	</insert>
	
	
	<!-- 병원 정보 이력적재 -->
	<insert id="insertHospitalHst" parameterType="hospitalInfoVO">
		INSERT INTO t_hospital_info_hst (
			hospital_nm,
			hospital_id,
			hospital_pwd,
			hospital_type,
			hospital_tel_no,
			mgr_tel_no,
			hospital_addr,
			hospital_img,
			hospital_desc,
			pwd_mdfy_dt,
			use_yn,
			gen_by,
			gen_dt,
			mdfy_by,
			mdfy_dt,
			new_yn,
			last_login,
			refresh_token,
			user_type,
			user_salt)
		(SELECT hospital_nm,
				hospital_id,
				hospital_pwd,
				hospital_type,
				hospital_tel_no,
				mgr_tel_no,
				hospital_addr,
				hospital_img,
				hospital_desc,
				pwd_mdfy_dt,
				use_yn,
				gen_by,
				gen_dt,
				mdfy_by,
				mdfy_dt,
				new_yn,
				last_login,
				refresh_token,
				user_type,
				user_salt
		   FROM t_hospital_info
		  WHERE hospital_id = #{hospital_id})
	</insert>
	
	
	<!-- 병원 진료시간 조회 -->
	<select id="getHospitalClinicList" parameterType="hospitalInfoVO" resultType="hmap">
		SELECT t1.hospital_id 
			 , t1.day_of_week 
			 , t2.cd_val AS day_of_week_nm
			 , t1.clinic_yn
			 , t1.c_strt_tm 
			 , t1.c_end_tm 
			 , t1.lunch_yn 
			 , t1.l_strt_tm 
			 , t1.l_end_tm 
		  FROM t_hospital_clinic_mapp t1
	INNER JOIN t_cm_cd t2
			ON t1.day_of_week = t2.cd 
		   AND t2.cat_cd = 'DOW'
		 WHERE 1=1
		   AND hospital_id = #{hospital_id}
		 ORDER BY t2.disp_ord
	</select>
	
	
	<select id="insertHospitalDupChk" parameterType="hospitalInfoVO" resultType="int">
		SELECT COUNT(*)
		  FROM t_hospital_clinic_mapp
		 WHERE 1=1
		   AND hospital_id = #{hospital_id}
		   AND day_of_week = #{day_of_week}
	</select>
	
	<insert id="insertHospitalClinic" parameterType="hospitalInfoVO">
		INSERT INTO t_hospital_clinic_mapp (
			hospital_id
			, day_of_week
		<if test='clinic_yn != null and !"".equals(clinic_yn)'>
			, clinic_yn
		</if>
		<if test='c_strt_tm != null and !"".equals(c_strt_tm)'>
			, c_strt_tm
		</if>
		<if test='c_end_tm != null and !"".equals(c_end_tm)'>
			, c_end_tm
		</if>
		<if test='lunch_yn != null and !"".equals(lunch_yn)'>
			, lunch_yn
		</if>
		<if test='l_strt_tm != null and !"".equals(l_strt_tm)'>
			, l_strt_tm
		</if>
		<if test='l_end_tm != null and !"".equals(l_end_tm)'>
			, l_end_tm
		</if>
		) VALUES (
			#{hospital_id}
			, #{day_of_week}
		<if test='clinic_yn != null and !"".equals(clinic_yn)'>
			, #{clinic_yn}
		</if>
		<if test='c_strt_tm != null and !"".equals(c_strt_tm)'>
			, #{c_strt_tm}
		</if>
		<if test='c_end_tm != null and !"".equals(c_end_tm)'>
			, #{c_end_tm}
		</if>
		<if test='lunch_yn != null and !"".equals(lunch_yn)'>
			, #{lunch_yn}
		</if>
		<if test='l_strt_tm != null and !"".equals(l_strt_tm)'>
			, #{l_strt_tm}
		</if>
		<if test='l_end_tm != null and !"".equals(l_end_tm)'>
			, #{l_end_tm}
		</if>
		)
	</insert>
	
	
	<update id="updateHospitalClinic" parameterType="hospitalInfoVO">
		UPDATE t_hospital_clinic_mapp
		   SET hospital_id = #{hospital_id}
			 , day_of_week = #{day_of_week}
		<if test='clinic_yn != null and !"".equals(clinic_yn)'>
			 , clinic_yn = #{clinic_yn}
		</if>
		<if test='c_strt_tm != null and !"".equals(c_strt_tm)'>
			 , c_strt_tm = #{c_strt_tm}
		</if>
		<if test='c_end_tm != null and !"".equals(c_end_tm)'>
			 , c_end_tm = #{c_end_tm}
		</if>
		<if test='lunch_yn != null and !"".equals(lunch_yn)'>
			 , lunch_yn = #{lunch_yn}
		</if>
		<if test='l_strt_tm != null and !"".equals(l_strt_tm)'>
			 , l_strt_tm = #{l_strt_tm}
		</if>
		<if test='l_end_tm != null and !"".equals(l_end_tm)'>
			 , l_end_tm = #{l_end_tm}
		</if>
		 WHERE 1=1
		   AND hospital_id = #{hospital_id}
		   AND day_of_week = #{day_of_week}
	</update>

	
	<update id="updateHospitalInfo" parameterType="hospitalInfoVO">
		UPDATE t_hospital_info
		   SET hospital_id = #{hospital_id}
		<if test='hospital_nm != null and !"".equals(hospital_nm)'>
		   	 , hospital_nm = #{hospital_nm}
		</if>
		<if test='hospital_pwd != null and !"".equals(hospital_pwd)'> 
			 , hospital_pwd = #{hospital_pwd}
		</if>
		<if test='hospital_type != null and !"".equals(hospital_type)'> 
			 , hospital_type = #{hospital_type}
		</if>
		<if test='hospital_tel_no != null and !"".equals(hospital_tel_no)'> 
			 , hospital_tel_no = #{hospital_tel_no}
		</if>
		<if test='mgr_tel_no != null and !"".equals(mgr_tel_no)'> 
			 , mgr_tel_no = #{mgr_tel_no}
		</if>
		<if test='hospital_addr != null and !"".equals(hospital_addr)'> 
			 , hospital_addr = #{hospital_addr}
		</if>
		<if test='img_file_byte != null and !"".equals(img_file_byte)'> 
			 , hospital_img = #{img_file_byte}
		</if>
		<if test='hospital_desc != null and !"".equals(hospital_desc)'> 
			 , hospital_desc = #{hospital_desc}
		</if>
		<if test='hospital_pwd != null and !"".equals(hospital_pwd)'> 
			 , pwd_mdfy_dt = now()
		</if>
		<if test='use_yn != null and !"".equals(use_yn)'>
			 , use_yn = 'Y'::bpchar
		</if>
		<if test='user_salt != null and !"".equals(user_salt)'> 
			 , user_salt = #{user_salt}
		</if>
			 , mdfy_by = 'admin'
			 , mdfy_dt = now()
			 , new_yn = 'N'
		WHERE 1=1
		  AND hospital_id = #{hospital_id}
	</update>
	
	
	<select id="getHospitalPayInfoList" parameterType="hospitalInfoVO" resultType="hmap">
		SELECT t1.hospital_id
			 , t1.use_flag
			 , t2.cd_val AS use_flag_nm
			 , t3.goodsname
			 , t3.goodname
			 , t3.totprice
			 , t3.currency
			 , t1.start_dt
			 , t1.end_dt
		  FROM t_inicis_user_mapp t1
	INNER JOIN t_cm_cd t2
			ON t1.use_flag = t2.cd
		   AND t2.cat_cd = 'PAY_USE_FLAG'
	INNER JOIN t_inicis_pay_hst t3
			ON t1.pay_seq = t3.seq
		 WHERE 1=1
		   AND hospital_id = #{hospital_id}
	</select>
	
	
	<select id="getHospitalInferList" parameterType="hospitalInfoVO" resultType="hmap">
		SELECT t3.user_code
			 , t3.user_nm
			 , t3.user_gender
			 , t4.cd_val AS user_gender_nm
			 , t1.ear_pos
			 , '고막 검사' AS infer_type
			 , '' AS infer_result
			 , t2.cd_val AS ear_pos_nm
			 , t1.seq AS infer_seq
			 , t1.gen_dt
		  FROM t_inference_info t1
	INNER JOIN t_cm_cd t2
			ON t1.ear_pos = t2.cd
		   AND t2.cat_cd = 'EAR_POS'
	INNER JOIN t_user_info t3
			ON t1.user_id = t3.user_id
	INNER JOIN t_cm_cd t4
			ON t3.user_gender = t4.cd
		   AND t4.cat_cd = 'USER_GENDER'
	</select>
	
	
	<select id="getGoodsList" parameterType="hospitalInfoVO" resultType="hmap">	
		SELECT cd
			 , cd_val
			 , cd_desc
			 , disp_ord
			 , cd_attr_1
		  FROM t_cm_cd
		 WHERE 1=1
		   AND cat_cd = 'HOSPITAL_GOODS'
	</select>
	
</mapper>
